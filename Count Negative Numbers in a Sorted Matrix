public class Solution {
    // 4,3,2,-1
    // 3,2,1,-1
    // 1,1-1,-2
    //-1,-1,-2,-3
    public int CountNegatives(int[][] grid) {
        // binarysearch --> find the first negative for each row
        int start =0;
        int end = grid[1].Length;
        int negatives =0;
        for (int i; i< grid.Length; i++ )
        {
            int mid = start +(end- start)/2;
            if(grid[i][mid] <0)
               negatives+= (grid.Length - i) * 
        }
    }
        // int count = 0;

        // if(grid is null || (grid.Length < 1 && grid[0].Length < 1))
        //     return count;

        // int r = 0, c = grid[0].Length - 1;

        // while(r < grid.Length && c >= 0) {
        //     if(grid[r][c] < 0) {
        //         count += grid.Length - r;
        //         c--;
        //     }
        //     else
        //         r++;          
        // }
        // return count;

}
